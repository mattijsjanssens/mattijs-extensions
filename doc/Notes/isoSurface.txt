- points originate from
    - face edges
    - face-diagonal edges
    - pyramid edges
- problem is the diagonal removal
- since this creates a surface 'edge' between two face edges
- usually this is no problem since these vertices are
  on a single face (inbetween two cells)
- but for some refinement patterns there might be another
  face creating the same surface 'edge'
- so:
    - store the point-pair together with the face
    - do not allow the same collapse on any other face.


Problem:
(Bugs/iso_filtering/)
- normal hex
- but with one edge split
  (since edge connected to a hex which was split,
   causing the edge to split)
- now if the face decomposition on both faces starts
  off from a vertex one before the split-edge-point
- then both faces can have the same triangle points
  (and even the same tet points!)
- (triangle points will be in opposite order?)
- so will generate duplicate iso triangles
- which give problems in filtering
- this will only happen if there is no valid tet-decomposition
Workaround:
- if no valid tet-decomposition enforce
  fan-triangulation starting from split-edge-point





#- two neighbouring cells
#- iso surface has small polyp sticking into cells above
#- (but only using pyramid edges)
#- now when filtering all but real edges it will squeeze out the
#neck of the polyp and cause non-manifold edges.
#
#- the basic reason is that we're creating new edges and if
#'the other side' does the same it pinches off.
#
#prevention:
#- collect new face
#- check that all points are not co-planar? Can happen easily
#- check that uses at least three faces?

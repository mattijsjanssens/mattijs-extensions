/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2106                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

vertices
(
    // solid1
    (-0.1  0.00  -0.05)
    ( 0.1  0.00  -0.05)
    ( 0.1  0.04  -0.05)
    (-0.1  0.04  -0.05)
    (-0.1  0.00   0.05)
    ( 0.1  0.00   0.05)
    ( 0.1  0.04   0.05)
    (-0.1  0.04   0.05)


    // solid2
    (-0.1 -0.04  -0.05)
    ( 0.1 -0.04  -0.05)
    ( 0.1  0.00  -0.05)
    (-0.1  0.00  -0.05)
    (-0.1 -0.04   0.05)
    ( 0.1 -0.04   0.05)
    ( 0.1  0.00   0.05)
    (-0.1  0.00   0.05)


);

blocks
(
    hex (0 1 2 3 4 5 6 7) solid1 (1 1 1) simpleGrading (1 1 1)
    hex (8 9 10 11 12 13 14 15) solid2 (1 1 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    solid1_bottom
    {
        type            cyclicAMI;
        inGroups        (coupleGroup);
        coupleGroup     coupleGroup;
        faces
        (
            (1 5 4 0)
        );
    }
    solid1_top
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }
    solid1_left
    {
        type wall;
        faces
        (
            (0 4 7 3)
        );
    }
    solid1_right
    {
        type wall;
        faces
        (
            (2 6 5 1)
        );
    }
    solid1_frontAndBack
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
        );
    }



    solid2_bottom
    {
        type wall;
        faces
        (
            (9 13 12 8)
        );
    }
    solid2_top
    {
        type            cyclicAMI;
        inGroups        (coupleGroup);
        coupleGroup     coupleGroup;

        faces
        (
            (11 15 14 10)
        );
    }
    solid2_left
    {
        type wall;
        faces
        (
            (8 12 15 11)
        );
    }
    solid2_right
    {
        type wall;
        faces
        (
            (10 14 13 9)
        );
    }
    solid2_frontAndBack
    {
        type empty;
        faces
        (
            (8 11 10 9)
            (12 13 14 15)
        );
    }
);

// ************************************************************************* //
